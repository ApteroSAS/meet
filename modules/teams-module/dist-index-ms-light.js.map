{"version":3,"file":"dist-index-ms-light.js","mappings":";;;;;;;;;;CAAA,SAAUA,iCAAiCC,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,4BACR,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,wBAAyB,CAAC,2BAA4BJ,GACnC,iBAAZC,QACdA,QAAQ,yBAA2BD,EAAQG,QAAQ,4BAEnDJ,EAAK,yBAA2BC,EAAQD,EAAK,2BAC9C,CATD,CASGO,MAAOC,GACV,M,2BCVAL,EAAOD,QAAUM,C,GCCbC,EAA2B,CAAC,EAGhC,SAASC,oBAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaV,QAGrB,IAAIC,EAASM,EAAyBE,GAAY,CAGjDT,QAAS,CAAC,GAOX,OAHAY,EAAoBH,GAAUR,EAAQA,EAAOD,QAASQ,qBAG/CP,EAAOD,OACf,CCrBAQ,oBAAoBK,EAAI,CAACb,EAASc,KACjC,IAAI,IAAIC,KAAOD,EACXN,oBAAoBQ,EAAEF,EAAYC,KAASP,oBAAoBQ,EAAEhB,EAASe,IAC5EE,OAAOC,eAAelB,EAASe,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDP,oBAAoBQ,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFd,oBAAoBkB,EAAK1B,IACH,oBAAX2B,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAelB,EAAS2B,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAelB,EAAS,aAAc,CAAE6B,OAAO,GAAO,E,kPCHvD,MAAMC,EAAuB,iCACvBC,EAAsB,UAEtBC,EAAoB,iDAG1BC,eAAeC,aACpB,OAAOC,EAAAA,EAAAA,YAAuBH,EAC/B,CAQM,MAAMI,gBAGXC,e,sIAAc,uBACZ,MAAMC,EAAK,IAAIC,gBAAgBC,SAASC,QACxCC,KAAKC,SAAWL,EAAGlB,IAAIW,GACnBW,KAAKC,SAAWC,OAAOJ,SAASK,KAAKC,WAAW,cAAgBF,OAAOJ,SAASK,KAAKC,WAAW,eAClG,kBACSZ,cAAca,yBADvB,IAIH,CAEDC,UACE,OAAOZ,gBAAgBa,IACxB,CAEDC,UACE,OAAOR,KAAKC,MACb,CAEDQ,2BACMT,KAAKQ,WACPhB,aAAakB,MAAKnB,gBACVoB,EAAQF,0BAAd,GAGL,CAEOG,4BACN,OAAOV,OAAOW,IAAIC,MAAMC,MAAMC,QAAQC,eAAiBjB,KAAKQ,SAC7D,CAEgC,kCAACU,GAChC,IAAuC,IAAnCA,EAAIC,QAAQ,kBAA0B,CACxC,IAAIC,SAAoB5B,cAAc6B,gBACtCH,QAAYE,EAAWE,4BAA4BJ,EACpD,CACD,OAAOA,CACR,CAE4B,gCAC3B,GAAIlB,KAAKY,4BAA6B,CACpC,IAAID,QAAgBnB,aAEpB,aADMmB,EAAQY,kBAAkBC,gBACzB,CACR,CACC,OAAO,CAEV,E,QNzDH","sources":["webpack://axolotis-module-teams/webpack/universalModuleDefinition","webpack://axolotis-module-teams/external umd2 \"@aptero/axolotis-player\"","webpack://axolotis-module-teams/webpack/bootstrap","webpack://axolotis-module-teams/webpack/runtime/define property getters","webpack://axolotis-module-teams/webpack/runtime/hasOwnProperty shorthand","webpack://axolotis-module-teams/webpack/runtime/make namespace object","webpack://axolotis-module-teams/./src/lib/microsoft/MsTeamsAPILight.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@aptero/axolotis-player\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"axolotis-module-teams\", [\"@aptero/axolotis-player\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"axolotis-module-teams\"] = factory(require(\"@aptero/axolotis-player\"));\n\telse\n\t\troot[\"axolotis-module-teams\"] = factory(root[\"@aptero/axolotis-player\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__12__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__12__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { getService, IService } from \"@aptero/axolotis-player\";\nimport type { MsTeamsAPI } from \"@root/lib/microsoft/MsTeamsAPI\";\nexport const MICROSOFT_AUTH_ERROR = \"error_microsoft_not_authorized\";\nexport const MSTEAMS_QUERY_PARAM = \"msteams\";\n\nexport const MICROSOFT_SERVICE = \"@aptero/axolotis-module-teams/MicrosoftService\";\n\n//msTeamsAPI\nexport async function msTeamsAPI(): Promise<MsTeamsAPI> {\n  return getService<MsTeamsAPI>(MICROSOFT_SERVICE);\n}\n\ndeclare const window;\n\n/**\n * aims of this class is to perform siple check to see if we need to load the complet MsTeams Bundle with its\n * dependencies. Thus this module should be lightweight and not import big library.\n */\nexport class MsTeamsAPILight implements IService {\n  private msmode: boolean;\n\n  constructor() {\n    const qs = new URLSearchParams(location.search);\n    this.msmode = !!qs.get(MSTEAMS_QUERY_PARAM);\n    if (this.msmode && (window.location.host.startsWith(\"localhost\") || window.location.host.startsWith(\"127.0.0.1\"))) {\n      (async () => {\n        (await msTeamsAPI()).registerTeamsTestHelper();\n      })();\n    }\n  }\n\n  getType(): string {\n    return MsTeamsAPILight.name;\n  }\n\n  msTeams() {\n    return this.msmode;\n  }\n\n  redirectToTeamsSidePanel() {\n    if (this.msTeams()) {\n      msTeamsAPI().then(async (service) => {\n        await service.redirectToTeamsSidePanel();\n      });\n    }\n  }\n\n  private msPassiveLoginCheckNeeded() {\n    return window.APP.store.state.profile.microsoftUser || this.msTeams();\n  }\n\n  async preFetchConvertMicrosoftUrl(url) {\n    if (url.indexOf(\"sharepoint.com\") === -1) {\n      let urlService = (await msTeamsAPI()).getUrlService();\n      url = await urlService.preFetchConvertMicrosoftUrl(url);\n    }\n    return url;\n  }\n\n  async conditionalPassiveLogIn(): Promise<boolean> {\n    if (this.msPassiveLoginCheckNeeded()) {\n      let service = await msTeamsAPI();\n      await service.getLoginService().passiveLogin();\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__12__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","MICROSOFT_AUTH_ERROR","MSTEAMS_QUERY_PARAM","MICROSOFT_SERVICE","async","msTeamsAPI","getService","MsTeamsAPILight","constructor","qs","URLSearchParams","location","search","this","msmode","window","host","startsWith","registerTeamsTestHelper","getType","name","msTeams","redirectToTeamsSidePanel","then","service","msPassiveLoginCheckNeeded","APP","store","state","profile","microsoftUser","url","indexOf","urlService","getUrlService","preFetchConvertMicrosoftUrl","getLoginService","passiveLogin"],"sourceRoot":""}