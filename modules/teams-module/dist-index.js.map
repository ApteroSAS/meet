{"version":3,"file":"dist-index.js","mappings":";;;;;;;;;;CAAA,SAAUA,iCAAiCC,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,4BACR,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,wBAAyB,CAAC,2BAA4BJ,GACnC,iBAAZC,QACdA,QAAQ,yBAA2BD,EAAQG,QAAQ,4BAEnDJ,EAAK,yBAA2BC,EAAQD,EAAK,2BAC9C,CATD,CASGO,MAAOC,GACV,M,2BCVAL,EAAOD,QAAUM,C,GCCbC,EAA2B,CAAC,EAGhC,SAASC,oBAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaV,QAGrB,IAAIC,EAASM,EAAyBE,GAAY,CAGjDT,QAAS,CAAC,GAOX,OAHAY,EAAoBH,GAAUR,EAAQA,EAAOD,QAASQ,qBAG/CP,EAAOD,OACf,CCrBAQ,oBAAoBK,EAAKZ,IACxB,IAAIa,EAASb,GAAUA,EAAOc,WAC7B,IAAOd,EAAiB,QACxB,IAAM,EAEP,OADAO,oBAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdN,oBAAoBQ,EAAI,CAAChB,EAASkB,KACjC,IAAI,IAAIC,KAAOD,EACXV,oBAAoBY,EAAEF,EAAYC,KAASX,oBAAoBY,EAAEpB,EAASmB,IAC5EE,OAAOC,eAAetB,EAASmB,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDX,oBAAoBY,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFlB,oBAAoBsB,EAAK9B,IACH,oBAAX+B,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAetB,EAAS+B,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAetB,EAAS,aAAc,CAAEiC,OAAO,GAAO,E,0aCOvD,MAAMC,EAAoB,iDACpBC,EAA2B,uDAC3BC,EAAqB,gDAErBC,EAAsB,+BACtBC,EAAmB,qBACnBC,EAAsB,UAG5B,SAASC,kBACd,OAAOC,EAAAA,EAAAA,gBAAgCN,EACxC,CAGM,SAASO,uBACd,OAAOC,EAAAA,EAAAA,YAA4BR,EACpC,CAGMS,eAAeC,aACpB,OAAOF,EAAAA,EAAAA,YAAuBT,EAC/B,CAMM,MAAMY,OACXC,YAAoBC,EAA+CC,GAA6C,KAA5FD,uBAAAA,EAA4F,KAA7CC,6BAAAA,EACjEC,QAAQC,IAAI,0CACb,CAEDC,UACE,IAAIC,EAAuC,CAAC,EAW5C,OAVAA,EAAInB,GAAqBoB,KAAKN,uBAC9BK,EAAIlB,GAA4BmB,KAAKL,6BAS9BI,CACR,EAGI,MAAME,mBAAqB,CAACP,EAAuCC,KACxE,MAAMO,GAASC,EAAAA,EAAAA,uBAAqCC,EAAAA,sBAAsB,GAC1E,KAAMF,GAAUA,EAAOG,OAAS,GAC9B,MAAM,IAAIC,MAAM,2CAElBC,EAAAA,EAAAA,cAAa,IAAIf,OAAOE,EAAwBC,GAAhD,C,QPvDF","sources":["webpack://axolotis-module-teams/webpack/universalModuleDefinition","webpack://axolotis-module-teams/external umd2 \"@aptero/axolotis-player\"","webpack://axolotis-module-teams/webpack/bootstrap","webpack://axolotis-module-teams/webpack/runtime/compat get default export","webpack://axolotis-module-teams/webpack/runtime/define property getters","webpack://axolotis-module-teams/webpack/runtime/hasOwnProperty shorthand","webpack://axolotis-module-teams/webpack/runtime/make namespace object","webpack://axolotis-module-teams/./src/lib/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@aptero/axolotis-player\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"axolotis-module-teams\", [\"@aptero/axolotis-player\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"axolotis-module-teams\"] = factory(require(\"@aptero/axolotis-player\"));\n\telse\n\t\troot[\"axolotis-module-teams\"] = factory(root[\"@aptero/axolotis-player\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__12__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__12__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Item, getService, getServiceSync, ModulePromise } from \"@aptero/axolotis-player\";\n/**\n * Should only import type to stay lightweight\n */\nimport type { MsTeamsAPILight } from \"@root/lib/microsoft/MsTeamsAPILight\";\nimport type { MsTeamsAPI } from \"@root/lib/microsoft/MsTeamsAPI\";\nexport type { MicrosoftLoginService } from \"@root/lib/microsoft/service/MicrosoftLoginService\";\nimport { getGlobalStorageValue, GLOBAL_WORLDS_ENTITY, registerItem, WorldEntity } from \"@aptero/axolotis-player\";\n\n/*\nAX IMPORT HELPER\n */\nexport const MICROSOFT_SERVICE = \"@aptero/axolotis-module-teams/MicrosoftService\";\nexport const MICROSOFT_STATIC_SERVICE = \"@aptero/axolotis-module-teams/MicrosoftStaticService\";\nexport const PROPERTIES_SERVICE = \"@aptero/axolotis-module-properties/Properties\";\n\nexport const CHANGE_SETTINGS_URL = \"ms-teams-change-settings-url\";\nexport const PROCESS_DEEPLINK = \"ms-teams-deep-link\";\nexport const MSTEAMS_QUERY_PARAM = \"msteams\";\n\n//msTeamsAPILight\nexport function msTeamsAPILight(): MsTeamsAPILight {\n  return getServiceSync<MsTeamsAPILight>(MICROSOFT_STATIC_SERVICE);\n}\n\n//Helps to transition to 100% async\nexport function msTeamsAPILightAsync(): Promise<MsTeamsAPILight> {\n  return getService<MsTeamsAPILight>(MICROSOFT_STATIC_SERVICE);\n}\n\n//msTeamsAPI\nexport async function msTeamsAPI(): Promise<MsTeamsAPI> {\n  return getService<MsTeamsAPI>(MICROSOFT_SERVICE);\n}\n\n/*\nAX ITEM\n */\n\nexport class AxItem implements Item {\n  constructor(private moduleMicrosoftService: ModulePromise, private moduleMicrosoftStaticService: ModulePromise) {\n    console.log(\"@aptero/axolotis-module-teams installed\");\n  }\n\n  modules(): { [id: string]: ModulePromise } {\n    let ret: { [id: string]: ModulePromise } = {};\n    ret[MICROSOFT_SERVICE] = this.moduleMicrosoftService;\n    ret[MICROSOFT_STATIC_SERVICE] = this.moduleMicrosoftStaticService;\n    /*ret[MICROSOFT_SERVICE] = async () => {\n      let module = await import(\"@aptero/axolotis-module-teams/dist-index\");\n      return { module, classname: \"MsTeamsAPIFactory\" /*module.MsTeamsAPIFactory.name* };\n    };\n    ret[MICROSOFT_STATIC_SERVICE] = async () => {\n      let module = await import(\"@aptero/axolotis-module-teams/dist-index-light\");\n      return { module, classname: \"MsTeamsAPILight\" /*module.MsTeamsAPILight.name* };\n    };*/\n    return ret;\n  }\n}\n\nexport const registerWithImport = (moduleMicrosoftService: ModulePromise, moduleMicrosoftStaticService: ModulePromise) => {\n  const worlds = getGlobalStorageValue<WorldEntity[]>(GLOBAL_WORLDS_ENTITY, false);\n  if (!(worlds && worlds.length > 0)) {\n    throw new Error(\"Axolotis World Needs to be initialized\");\n  }\n  registerItem(new AxItem(moduleMicrosoftService, moduleMicrosoftStaticService)); //auto registration of service\n};\n\n/*\nexport const register = () => {\n  const worlds = getGlobalStorageValue<WorldEntity[]>(GLOBAL_WORLDS_ENTITY, false);\n  if (!(worlds && worlds.length > 0)) {\n    throw new Error(\"Axolotis World Needs to be initialized\");\n  }\n  registerItem(new AxItem()); //auto registration of service\n};*/\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__12__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","MICROSOFT_SERVICE","MICROSOFT_STATIC_SERVICE","PROPERTIES_SERVICE","CHANGE_SETTINGS_URL","PROCESS_DEEPLINK","MSTEAMS_QUERY_PARAM","msTeamsAPILight","getServiceSync","msTeamsAPILightAsync","getService","async","msTeamsAPI","AxItem","constructor","moduleMicrosoftService","moduleMicrosoftStaticService","console","log","modules","ret","this","registerWithImport","worlds","getGlobalStorageValue","GLOBAL_WORLDS_ENTITY","length","Error","registerItem"],"sourceRoot":""}